// ex.1
var a = 1, b = 1, c, d;
c = ++a; alert(c);           // 2 т.к. операнд стоит до переменной, к "а" сразу прибавилось единца
d = b++; alert(d);           // 1 т.к. операнд стоит после переменной "b", то сначала переменной d присвоили значения b. Затем прибавили единицу к b
c = (2+ ++a); alert(c);      // 5 a = 3, следовательно 2+3=5
d = (2+ b++); alert(d);      // 4 Перый шаг: 2+2=4 Затем к "b" прибавили единицу
alert(a);                    // 3
alert(b);                    // 3



//ex.2 Чему будет равен x в примере ниже?
var a = 2;
var x = 1 + (a *= 2); // x = 5



/* ex.3 Объявить две целочисленные переменные a и b и задать им произвольные начальные значения. Затем написать скрипт, который работает по следующему принципу:
если a и b положительные, вывести их разность;
если а и b отрицательные, вывести их произведение;
если а и b разных знаков, вывести их сумму; ноль можно считать положительным числом. 
*/
var a = 3;
var b = -3;

if(a >= 0 && b >= 0 ) 
   alert (a - b);
else if (a < 0 && b < 0)
   alert(x * y);
else if ((a >= 0  && b < 0) || (a < 0 && b >= 0))
    alert( a + b)


/*
###4. Присвоить переменной а значение в промежутке [0..15]. С помощью оператора switch организовать вывод чисел от a до 15. 
*/
var a = 1;
switch(a){
    case 0:
    alert();
} 

### 5. Реализовать основные 4 арифметические операции в виде функций с двумя параметрами. Обязательно использовать оператор return. 
### 6. Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation), где arg1, arg2 – значения аргументов, operation – строка с названием операции. В зависимости от переданного значения операции выполнить одну из арифметических операций (использовать функции из пункта 3) и вернуть полученное значение (использовать switch). 
### 7. *Сравнить null и 0. Попробуйте объяснить результат. 
### 8. *С помощью рекурсии организовать функцию возведения числа в степень. Формат: function power(val, pow), где val – заданное число, pow – степень.
*/